---
title: "Analysis of informational flags data from summer 2023"
execute:
  output: false
  echo: false
format:
  html:
    code-tools: true
    theme: cosmo
    toc: true
---

```{r}
library(tidyverse)
library(here)
library(janitor)
library(readxl)
library(lubridate)
library(plotly)
library(htmltools)
library(DT)
library(tidycensus)
library(censusapi)
Sys.setenv(CENSUS_KEY="f0c4bf511063de6900e4007c6f8fef68641af8d7")
```

```{r}
fips <- as.data.frame(fips_codes) %>% 
  mutate(state_county_fips = paste0(state_code, county_code)) %>%  
  select(state_name, county, state_county_fips) %>% 
  rename(state = state_name)

information_flags <- read_csv(here("data", "muckrock_informational_ee.csv")) %>% 
  clean_names() %>% 
  mutate(state_county_fips = str_remove(str_sub(airs_monitor_id, 1, 6), pattern= "-")) %>% 
  left_join(fips, by = "state_county_fips") %>% 
  mutate(date = date(sample_date_time))

```
# Which states, counties and pollutants were flagged? 
```{r}
# Of 30 states, these are midwest: Indiana, Iowa, Kansas, Nebraska, Ohio,  Wisconsin + Pennsylvania and Kentucky, which are debateable ?
# Angle could be - states that have never filed exceptional events, filing now? 
# Indiana's flags were for construction, not the fire 
midwest_states_and_counties <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(state, county)
```

```{r}
# Ok so we have ozone and PM/2.5 across multiple states, and even carbon monoxide
midwest_states_and_counties_pollutants <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(state, county, pollutant_name)

```
## States and counties 
- Of 30 states, these are Midwest: Indiana, Iowa, Kansas, Nebraska, Ohio,  Wisconsin 
- Angle could be - states that have never filed exceptional events, filing now? 
- Indiana's flags were for construction, not the fire so we remove Indiana 
```{r}
#| output: true
#| column: page

datatable(midwest_states_and_counties, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

## Counties and pollutants
- What happened in three Wisconsin counties that flagged carbon monoxide? 
```{r}
#| output: true
#| column: page

datatable(midwest_states_and_counties_pollutants, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

# How do the amount of days compare by state? 
```{r}
unique_days_by_state <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  group_by(state) %>% 
  summarize(unique_days = n_distinct(date))
```
## Number of days flagged by state
```{r}
#| output: true
#| column: page

datatable(unique_days_by_state, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```
## Number of counties flagged by state 
```{r}
unique_counties_by_state <-  information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  group_by(state) %>% 
  summarize(counties_flagged = n_distinct(county))

```

```{r}
#| output: true
#| column: page

datatable(unique_counties_by_state, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```
## Number of unique county-days by state 
```{r}
unique_county_days_by_state <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  group_by(state, county) %>% 
  summarize(days = n_distinct(date))

unique_county_days_by_state <- unique_county_days_by_state  %>% 
  group_by(state) %>% 
  summarize(county_days = sum(days))

```
```{r}
#| output: true
#| column: page

datatable(unique_county_days_by_state, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```
# What dates were flagged in each state? 

```{r}
# Unique days by state (at least one monitor was flagged in any county)

iowa_days <- information_flags %>%
  filter(state == "Iowa") %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(date)

kansas_days <- information_flags %>%
  filter(state == "Kansas") %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(date)

nebraska_days <- information_flags %>%
  filter(state == "Nebraska") %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(date)

ohio_days <- information_flags %>%
  filter(state == "Ohio") %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(date)

wisconsin_days <- information_flags %>%
  filter(state == "Wisconsin") %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  distinct(date)
```

## Iowa
```{r}
#| output: true
#| column: page

datatable(iowa_days, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```
## Kansas 

```{r}
#| output: true
#| column: page

datatable(kansas_days, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

## Nebraska

```{r}
#| output: true
#| column: page

datatable(nebraska_days, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

## Ohio

```{r}
#| output: true
#| column: page

datatable(ohio_days, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```


## Wisconsin

```{r}
#| output: true
#| column: page

datatable(wisconsin_days, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```



# How do the highest daily averages of monitors compare? 
## Ozone 

```{r}
# Ozone 
highest_ozone_comparison <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  filter(pollutant_name == "Ozone") %>% 
  group_by(airs_monitor_id, state, county, date) %>% 
  summarize(mean = mean(sample_value))

```
```{r}
#| output: true
#| column: page

datatable(highest_ozone_comparison, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

## PM2.5
```{r}
# PM25
highest_pm25_comparison <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  filter(pollutant_name == "PM2.5 - Local Conditions") %>% 
  group_by(airs_monitor_id, state, county, date) %>% 
  summarize(mean = mean(sample_value))

```
```{r}
#| output: true
#| column: page

datatable(highest_pm25_comparison, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```

## PM10
```{r}
# PM10
highest_pm10_comparison <- information_flags %>% 
  filter(state %in% c("Indiana", "Iowa", "Kansas", "Nebraska", "Ohio",  "Wisconsin")) %>% 
  filter(event_type_description == "Fire - Canadian.") %>% 
  filter(pollutant_name == "PM10 Total 0-10um STP") %>% 
  group_by(airs_monitor_id, state, county, date) %>% 
  summarize(mean = mean(sample_value))

```
```{r}
#| output: true
#| column: page

datatable(highest_pm10_comparison, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',

                            options = list(
                                paging = TRUE,
                                searching = TRUE,
                                fixedColumns = TRUE,
                                autoWidth = TRUE,
                                ordering = TRUE,
                                dom = 'tB',
                                buttons = c('copy', 'csv', 'excel')
                            ))

  


```